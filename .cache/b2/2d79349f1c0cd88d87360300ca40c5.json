{"id":"../node_modules/3id-did-provider/lib/threeid-provider.js","dependencies":[{"name":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/threeid-provider.js.map","includedInParent":true,"mtime":1642262883137},{"name":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/src/threeid-provider.ts","includedInParent":true,"mtime":1642262883137},{"name":"/home/vitalpointai/projects/space-gems/package.json","includedInParent":true,"mtime":1642266346920},{"name":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/package.json","includedInParent":true,"mtime":1642262883137},{"name":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/.babelrc","includedInParent":true,"mtime":1642262883137},{"name":"./did-provider","loc":{"line":31,"column":31},"parent":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/threeid-provider.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/did-provider.js"},{"name":"./three-idx","loc":{"line":32,"column":28},"parent":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/threeid-provider.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/three-idx.js"},{"name":"./permissions","loc":{"line":33,"column":43},"parent":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/threeid-provider.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/permissions.js"},{"name":"./keychain","loc":{"line":34,"column":27},"parent":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/threeid-provider.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/keychain.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst did_provider_1 = require(\"./did-provider\");\nconst three_idx_1 = require(\"./three-idx\");\nconst permissions_1 = __importStar(require(\"./permissions\"));\nconst keychain_1 = require(\"./keychain\");\nclass ThreeIdProvider {\n    constructor(_threeIdx, _permissions, _keychain) {\n        this._threeIdx = _threeIdx;\n        this._permissions = _permissions;\n        this._keychain = _keychain;\n    }\n    get keychain() {\n        return this._keychain;\n    }\n    get permissions() {\n        return this._permissions;\n    }\n    get id() {\n        return this._threeIdx.id;\n    }\n    static create(config) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (config.seed && config.authSecret)\n                throw new Error(\"Can't use both seed and authSecret\");\n            if (!config.seed && !config.authSecret)\n                throw new Error('Either seed or authSecret is needed');\n            if (config.authSecret && !config.authId) {\n                throw new Error('AuthId must be given along with authSecret');\n            }\n            if (config.authId && config.disableIDX) {\n                throw new Error('AuthId cannot be used with disableIDX');\n            }\n            const threeIdx = new three_idx_1.ThreeIDX(config.ceramic);\n            const permissions = new permissions_1.default(config.getPermission);\n            const makeTmpProvider = (keyring, forcedDID) => {\n                return new did_provider_1.DidProvider({\n                    keyring,\n                    permissions,\n                    threeIdx,\n                    forcedOrigin: permissions_1.SELF_ORIGIN,\n                    forcedDID,\n                });\n            };\n            let keychain;\n            if (config.seed) {\n                if (typeof config.seed === 'string')\n                    throw new Error('seed needs to be Uint8Array');\n                if (config.did) {\n                    keychain = yield keychain_1.Keychain.loadFromSeed(threeIdx, config.seed, config.did, makeTmpProvider);\n                }\n                else {\n                    keychain = yield keychain_1.Keychain.create(threeIdx, makeTmpProvider, config.seed, config.v03ID);\n                }\n            }\n            else if (config.authSecret) {\n                keychain = yield keychain_1.Keychain.load(threeIdx, config.authSecret, makeTmpProvider);\n            }\n            permissions.setDID(threeIdx.id);\n            const idw = new ThreeIdProvider(threeIdx, permissions, keychain);\n            yield idw._threeIdx.setDIDProvider(idw.getDidProvider(permissions_1.SELF_ORIGIN));\n            if (config.authId && !((_a = (yield (keychain === null || keychain === void 0 ? void 0 : keychain.list()))) === null || _a === void 0 ? void 0 : _a.length)) {\n                yield idw.keychain.add(config.authId, config.authSecret);\n                yield idw.keychain.commit();\n            }\n            if (idw._threeIdx.docs.idx == null && !config.disableIDX) {\n                yield idw._threeIdx.createIDX();\n            }\n            return idw;\n        });\n    }\n    getDidProvider(forcedOrigin) {\n        return new did_provider_1.DidProvider({\n            keyring: this.keychain._keyring,\n            permissions: this.permissions,\n            threeIdx: this._threeIdx,\n            forcedOrigin,\n        });\n    }\n}\nexports.default = ThreeIdProvider;\n"},"sourceMaps":{"js":{"version":3,"file":"threeid-provider.js","sourceRoot":"","sources":["../src/threeid-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import type { CeramicApi } from '@ceramicnetwork/common'\n\nimport { DidProvider } from './did-provider'\nimport Keyring from './keyring'\nimport { ThreeIDX } from './three-idx'\nimport Permissions, { GetPermissionFn, SELF_ORIGIN } from './permissions'\nimport { Keychain } from './keychain'\n\ntype AuthConfig = { authId: string; authSecret: Uint8Array; seed?: never }\ntype SeedConfig = { authId?: never; authSecret?: never; seed: Uint8Array; did?: string }\n// type SeedDidConfig = { authId?: never; authSecret?: never; seed: Uint8Array, did: string }\n\ntype IDWConfig = {\n  getPermission: GetPermissionFn\n  v03ID?: string\n  ceramic: CeramicApi\n  disableIDX?: boolean\n} & (AuthConfig | SeedConfig)\n\nexport default class ThreeIdProvider {\n  /**\n   * Use ThreeIdProvider.create() to create an ThreeIdProvider instance\n   */\n  constructor(\n    protected _threeIdx: ThreeIDX,\n    protected _permissions: Permissions,\n    protected _keychain: Keychain\n  ) {}\n  /**\n   * @property {Keychain} keychain          Edit the keychain\n   */\n  get keychain(): Keychain {\n    return this._keychain\n  }\n\n  /**\n   * @property {Permissions} permissions    Edit permissions\n   */\n  get permissions(): Permissions {\n    return this._permissions\n  }\n\n  /**\n   * @property {string} id                 The DID of the ThreeIdProvider instance\n   */\n  get id(): string {\n    return this._threeIdx.id\n  }\n\n  /**\n   * Creates an instance of ThreeIdProvider\n   *\n   * @param     {Object}        config                  The configuration to be used\n   * @param     {Function}      config.getPermission    The function that is called to ask the user for permission\n   * @param     {CeramicApi}    config.ceramic          The ceramic instance to use\n   * @param     {Uint8Array}    config.seed             The seed of the 3ID, 32 bytes\n   * @param     {Uint8Array}    config.authSecret       The authSecret to use, 32 bytes\n   * @param     {String}        config.authId           The authId is used to identify the authSecret\n   * @param     {Boolean}       config.disableIDX       Disable creation of the IDX document\n   * @param     {String}        config.v03ID            A v0 3ID, has to be passed if a migration is being preformed\n   * @return    {ThreeIdProvider}                       An ThreeIdProvider instance\n   */\n  static async create(config: IDWConfig): Promise<ThreeIdProvider> {\n    if (config.seed && config.authSecret) throw new Error(\"Can't use both seed and authSecret\")\n    if (!config.seed && !config.authSecret) throw new Error('Either seed or authSecret is needed')\n    if (config.authSecret && !config.authId) {\n      throw new Error('AuthId must be given along with authSecret')\n    }\n    if (config.authId && config.disableIDX) {\n      throw new Error('AuthId cannot be used with disableIDX')\n    }\n    const threeIdx = new ThreeIDX(config.ceramic)\n    const permissions = new Permissions(config.getPermission)\n    const makeTmpProvider = (keyring: Keyring, forcedDID: string): DidProvider => {\n      return new DidProvider({\n        keyring,\n        permissions,\n        threeIdx,\n        forcedOrigin: SELF_ORIGIN,\n        forcedDID,\n      })\n    }\n    let keychain\n    if (config.seed) {\n      if (typeof config.seed === 'string') throw new Error('seed needs to be Uint8Array')\n      if (config.did) {\n        keychain = await Keychain.loadFromSeed(threeIdx, config.seed, config.did, makeTmpProvider)\n      } else {\n        keychain = await Keychain.create(threeIdx, makeTmpProvider, config.seed, config.v03ID)\n      }\n    } else if (config.authSecret) {\n      keychain = await Keychain.load(threeIdx, config.authSecret, makeTmpProvider)\n    }\n    permissions.setDID(threeIdx.id)\n    const idw = new ThreeIdProvider(threeIdx, permissions, keychain as Keychain)\n    await idw._threeIdx.setDIDProvider(idw.getDidProvider(SELF_ORIGIN))\n    if (config.authId && !(await keychain?.list())?.length) {\n      // Add the auth method to the keychain\n      await idw.keychain.add(config.authId, config.authSecret)\n      await idw.keychain.commit()\n    }\n    if (idw._threeIdx.docs.idx == null && !config.disableIDX) {\n      // Ensure IDX is created and linked to the DID\n      await idw._threeIdx.createIDX()\n    }\n    return idw\n  }\n\n  /**\n   * Get the DIDProvider\n   *\n   * @return    {DidProvider}                   The DIDProvider for this ThreeIdProvider instance\n   */\n  getDidProvider(forcedOrigin?: string): DidProvider {\n    return new DidProvider({\n      keyring: this.keychain._keyring,\n      permissions: this.permissions,\n      threeIdx: this._threeIdx,\n      forcedOrigin,\n    })\n  }\n}\n"]}},"error":null,"hash":"ec2a3495883a7d25fcbed084d9116b8d","cacheData":{"env":{}}}