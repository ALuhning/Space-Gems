{"id":"../node_modules/ajv/dist/compile/ref_error.js","dependencies":[{"name":"/home/vitalpointai/projects/space-gems/node_modules/ajv/dist/compile/ref_error.js.map","includedInParent":true,"mtime":1642262882657},{"name":"/home/vitalpointai/projects/space-gems/node_modules/ajv/lib/compile/ref_error.ts","includedInParent":true,"mtime":1642262882657},{"name":"/home/vitalpointai/projects/space-gems/package.json","includedInParent":true,"mtime":1642266346920},{"name":"/home/vitalpointai/projects/space-gems/node_modules/ajv/package.json","includedInParent":true,"mtime":1642262882657},{"name":"./resolve","loc":{"line":3,"column":26},"parent":"/home/vitalpointai/projects/space-gems/node_modules/ajv/dist/compile/ref_error.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/ajv/dist/compile/resolve.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n"},"sourceMaps":{"js":{"version":3,"file":"ref_error.js","sourceRoot":"","sources":["../../lib/compile/ref_error.ts"],"names":[],"mappings":";;AAAA,uCAA8D;AAE9D,MAAqB,eAAgB,SAAQ,KAAK;IAIhD,YAAY,MAAc,EAAE,GAAW,EAAE,GAAY;QACnD,KAAK,CAAC,GAAG,IAAI,2BAA2B,GAAG,YAAY,MAAM,EAAE,CAAC,CAAA;QAChE,IAAI,CAAC,UAAU,GAAG,IAAA,oBAAU,EAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QACzC,IAAI,CAAC,aAAa,GAAG,IAAA,qBAAW,EAAC,IAAA,qBAAW,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;IAChE,CAAC;CACF;AATD,kCASC","sourcesContent":["import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(this.missingRef))\n  }\n}\n"]}},"error":null,"hash":"f828411467bc30f38ecd844b3fb63e53","cacheData":{"env":{}}}