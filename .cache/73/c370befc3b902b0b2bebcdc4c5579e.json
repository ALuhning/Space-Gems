{"id":"../node_modules/3id-did-provider/lib/permissions.js","dependencies":[{"name":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/permissions.js.map","includedInParent":true,"mtime":1642262883137},{"name":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/src/permissions.ts","includedInParent":true,"mtime":1642262883137},{"name":"/home/vitalpointai/projects/space-gems/package.json","includedInParent":true,"mtime":1642266346920},{"name":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/package.json","includedInParent":true,"mtime":1642262883137},{"name":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/.babelrc","includedInParent":true,"mtime":1642262883137},{"name":"store","loc":{"line":16,"column":40},"parent":"/home/vitalpointai/projects/space-gems/node_modules/3id-did-provider/lib/permissions.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/store/dist/store.legacy.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SELF_ORIGIN = void 0;\nconst store_1 = __importDefault(require(\"store\"));\nexports.SELF_ORIGIN = '__IDW_ORIGIN';\nconst storageKey = (origin, did) => {\n    if (!origin)\n        origin = '__NULL_ORIGIN';\n    return `3id_permission_${did}_${origin}`;\n};\nclass Permissions {\n    constructor(getPermission) {\n        this.getPermission = getPermission;\n        this.did = null;\n        if (typeof this.getPermission !== 'function') {\n            throw new Error('getPermission parameter has to be a function');\n        }\n    }\n    setDID(did) {\n        this.did = did;\n    }\n    request(origin, paths = []) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.has(origin, paths)) {\n                return paths;\n            }\n            else {\n                const given = yield this.getPermission({\n                    type: 'authenticate',\n                    origin,\n                    payload: { paths },\n                });\n                const existing = this.get(origin);\n                const union = existing\n                    ? existing.concat(given ? given.filter((e) => !existing.includes(e)) : [])\n                    : given;\n                this.set(origin, union);\n                return given;\n            }\n        });\n    }\n    has(origin, paths = []) {\n        if (origin === exports.SELF_ORIGIN)\n            return true;\n        const currentPaths = this.get(origin);\n        return paths.reduce((acc, path) => {\n            return acc && Boolean(currentPaths === null || currentPaths === void 0 ? void 0 : currentPaths.includes(path));\n        }, Boolean(currentPaths));\n    }\n    get(origin) {\n        if (!this.did)\n            throw new Error('DID not set');\n        return store_1.default.get(storageKey(origin, this.did));\n    }\n    set(origin, paths) {\n        if (!this.did)\n            throw new Error('DID not set');\n        store_1.default.set(storageKey(origin, this.did), paths);\n    }\n}\nexports.default = Permissions;\n"},"sourceMaps":{"js":{"version":3,"file":"permissions.js","sourceRoot":"","sources":["../src/permissions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,kDAAyB;AAWZ,QAAA,WAAW,GAAG,cAAc,CAAA;AAEzC,MAAM,UAAU,GAAG,CAAC,MAAc,EAAE,GAAW,EAAE,EAAE;IACjD,IAAI,CAAC,MAAM;QAAE,MAAM,GAAG,eAAe,CAAA;IACrC,OAAO,kBAAkB,GAAG,IAAI,MAAM,EAAE,CAAA;AAC1C,CAAC,CAAA;AAED,MAAqB,WAAW;IAM9B,YAAsB,aAA8B;QAA9B,kBAAa,GAAb,aAAa,CAAiB;QAL7C,QAAG,GAAkB,IAAI,CAAA;QAM9B,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,UAAU,EAAE;YAC5C,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAA;SAChE;IACH,CAAC;IAED,MAAM,CAAC,GAAW;QAChB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;IAChB,CAAC;IASK,OAAO,CAAC,MAAc,EAAE,QAAuB,EAAE;;YACrD,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;gBAC3B,OAAO,KAAK,CAAA;aACb;iBAAM;gBACL,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC;oBACrC,IAAI,EAAE,cAAc;oBACpB,MAAM;oBACN,OAAO,EAAE,EAAE,KAAK,EAAE;iBACnB,CAAC,CAAA;gBACF,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;gBACjC,MAAM,KAAK,GAAG,QAAQ;oBACpB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBAC1E,CAAC,CAAC,KAAK,CAAA;gBACT,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;gBACvB,OAAO,KAAK,CAAA;aACb;QACH,CAAC;KAAA;IASD,GAAG,CAAC,MAAc,EAAE,QAAuB,EAAE;QAC3C,IAAI,MAAM,KAAK,mBAAW;YAAE,OAAO,IAAI,CAAA;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QACrC,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,GAAY,EAAE,IAAY,EAAE,EAAE;YACjD,OAAO,GAAG,IAAI,OAAO,CAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;QACrD,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,CAAA;IAC3B,CAAC;IAQD,GAAG,CAAC,MAAc;QAChB,IAAI,CAAC,IAAI,CAAC,GAAG;YAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;QAC7C,OAAO,eAAK,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAyB,CAAA;IACxE,CAAC;IAQD,GAAG,CAAC,MAAc,EAAE,KAA2B;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG;YAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;QAC7C,eAAK,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;IAChD,CAAC;CACF;AA7ED,8BA6EC","sourcesContent":["import store from 'store'\n\ninterface PermissionRequest {\n  type: string\n  origin?: string | null\n  payload: Record<string, any>\n}\n\ntype Origin = string | null | undefined\nexport type GetPermissionFn = (req: PermissionRequest) => Promise<Array<string>> | null\n\nexport const SELF_ORIGIN = '__IDW_ORIGIN'\n\nconst storageKey = (origin: Origin, did: string) => {\n  if (!origin) origin = '__NULL_ORIGIN'\n  return `3id_permission_${did}_${origin}`\n}\n\nexport default class Permissions {\n  public did: string | null = null\n\n  /**\n   * The Permissions class exposes methods to read and update the given permissions\n   */\n  constructor(protected getPermission: GetPermissionFn) {\n    if (typeof this.getPermission !== 'function') {\n      throw new Error('getPermission parameter has to be a function')\n    }\n  }\n\n  setDID(did: string): void {\n    this.did = did\n  }\n\n  /**\n   * Request permission for given paths for a given origin.\n   *\n   * @param     {String}            origin          Application domain\n   * @param     {Array<String>}     paths           The desired paths\n   * @return    {Array<String>}                     The paths that where granted permission for\n   */\n  async request(origin: Origin, paths: Array<string> = []): Promise<Array<string> | null> {\n    if (this.has(origin, paths)) {\n      return paths\n    } else {\n      const given = await this.getPermission({\n        type: 'authenticate',\n        origin,\n        payload: { paths },\n      })\n      const existing = this.get(origin)\n      const union = existing\n        ? existing.concat(given ? given.filter((e) => !existing.includes(e)) : [])\n        : given\n      this.set(origin, union)\n      return given\n    }\n  }\n\n  /**\n   * Determine if permission has been given for paths for a given origin.\n   *\n   * @param     {String}            origin          Application domain\n   * @param     {Array<String>}     paths           The desired paths\n   * @return    {Boolean}                           True if permission has previously been given\n   */\n  has(origin: Origin, paths: Array<string> = []): boolean {\n    if (origin === SELF_ORIGIN) return true\n    const currentPaths = this.get(origin)\n    return paths.reduce((acc: boolean, path: string) => {\n      return acc && Boolean(currentPaths?.includes(path))\n    }, Boolean(currentPaths))\n  }\n\n  /**\n   * Get the paths which the given origin has permission for.\n   *\n   * @param     {String}            origin          Application domain\n   * @return    {Array<String>}                     The permissioned paths\n   */\n  get(origin: Origin): Array<string> | null {\n    if (!this.did) throw new Error('DID not set')\n    return store.get(storageKey(origin, this.did)) as Array<string> | null\n  }\n\n  /**\n   * Set the paths which the given origin should have permission for.\n   *\n   * @param     {String}            origin          Application domain\n   * @param     {Array<String>}     paths           The desired paths\n   */\n  set(origin: Origin, paths: Array<string> | null): void {\n    if (!this.did) throw new Error('DID not set')\n    store.set(storageKey(origin, this.did), paths)\n  }\n}\n"]}},"error":null,"hash":"f28150a15cc078e769da78ea9c0d5bd2","cacheData":{"env":{}}}