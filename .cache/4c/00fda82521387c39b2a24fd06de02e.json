{"id":"../node_modules/@ceramicnetwork/streamid/lib/stream-id.js","dependencies":[{"name":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js.map","includedInParent":true,"mtime":1642247367986},{"name":"/home/vitalpointai/projects/space-gems/package.json","includedInParent":true,"mtime":1642266346920},{"name":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/package.json","includedInParent":true,"mtime":1642247367986},{"name":"cids","loc":{"line":28,"column":39},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/cids/src/index.js"},{"name":"multibase","loc":{"line":29,"column":44},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/multibase/src/index.js"},{"name":"varint","loc":{"line":30,"column":41},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/varint/index.js"},{"name":"ipld-dag-cbor","loc":{"line":31,"column":48},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/ipld-dag-cbor/src/index.js"},{"name":"uint8arrays/concat","loc":{"line":32,"column":41},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/uint8arrays/concat.js"},{"name":"uint8arrays/to-string","loc":{"line":33,"column":44},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/uint8arrays/to-string.js"},{"name":"./constants","loc":{"line":34,"column":28},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/constants.js"},{"name":"./reading-bytes","loc":{"line":35,"column":32},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/reading-bytes.js"},{"name":"typescript-memoize","loc":{"line":36,"column":37},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/typescript-memoize/dist/es2015/memoize-decorator.js"},{"name":"./commit-id","loc":{"line":37,"column":28},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/commit-id.js"},{"name":"./stream-type","loc":{"line":38,"column":30},"parent":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-id.js","resolved":"/home/vitalpointai/projects/space-gems/node_modules/@ceramicnetwork/streamid/lib/stream-type.js"}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _StreamID_type, _StreamID_cid;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamID = void 0;\nconst cids_1 = __importDefault(require(\"cids\"));\nconst multibase_1 = __importDefault(require(\"multibase\"));\nconst varint_1 = __importDefault(require(\"varint\"));\nconst ipld_dag_cbor_1 = __importDefault(require(\"ipld-dag-cbor\"));\nconst concat_1 = __importDefault(require(\"uint8arrays/concat\"));\nconst to_string_1 = __importDefault(require(\"uint8arrays/to-string\"));\nconst constants_1 = require(\"./constants\");\nconst reading_bytes_1 = require(\"./reading-bytes\");\nconst typescript_memoize_1 = require(\"typescript-memoize\");\nconst commit_id_1 = require(\"./commit-id\");\nconst stream_type_1 = require(\"./stream-type\");\nfunction fromBytes(bytes) {\n    const result = fromBytesNoThrow(bytes);\n    if (result instanceof Error) {\n        throw result;\n    }\n    return result;\n}\nfunction fromBytesNoThrow(bytes) {\n    const [streamCodec, streamCodecRemainder] = reading_bytes_1.readVarint(bytes);\n    if (streamCodec !== constants_1.STREAMID_CODEC)\n        return new Error('fromBytes: invalid streamid, does not include streamid codec');\n    const [type, streamTypeRemainder] = reading_bytes_1.readVarint(streamCodecRemainder);\n    const cidResult = reading_bytes_1.readCidNoThrow(streamTypeRemainder);\n    if (cidResult instanceof Error) {\n        return cidResult;\n    }\n    const [cid, cidRemainder] = cidResult;\n    if (cidRemainder.length > 0) {\n        return new Error(`Invalid StreamID: contains commit`);\n    }\n    return new StreamID(type, cid);\n}\nfunction fromString(input) {\n    const result = fromStringNoThrow(input);\n    if (result instanceof Error) {\n        throw result;\n    }\n    return result;\n}\nfunction fromStringNoThrow(input) {\n    const protocolFree = input.replace('ceramic://', '').replace('/ceramic/', '');\n    const commitFree = protocolFree.includes('commit') ? protocolFree.split('?')[0] : protocolFree;\n    const bytes = multibase_1.default.decode(commitFree);\n    return fromBytesNoThrow(bytes);\n}\nconst TAG = Symbol.for('@ceramicnetwork/streamid/StreamID');\nclass StreamID {\n    constructor(type, cid) {\n        this._tag = TAG;\n        _StreamID_type.set(this, void 0);\n        _StreamID_cid.set(this, void 0);\n        if (!(type || type === 0))\n            throw new Error('constructor: type required');\n        if (!cid)\n            throw new Error('constructor: cid required');\n        __classPrivateFieldSet(this, _StreamID_type, typeof type === 'string' ? stream_type_1.StreamType.codeByName(type) : type, \"f\");\n        __classPrivateFieldSet(this, _StreamID_cid, typeof cid === 'string' ? new cids_1.default(cid) : cid, \"f\");\n    }\n    static isInstance(instance) {\n        return typeof instance === 'object' && '_tag' in instance && instance._tag === TAG;\n    }\n    static async fromGenesis(type, genesis) {\n        const cid = await ipld_dag_cbor_1.default.util.cid(new Uint8Array(ipld_dag_cbor_1.default.util.serialize(genesis)));\n        return new StreamID(type, cid);\n    }\n    get type() {\n        return __classPrivateFieldGet(this, _StreamID_type, \"f\");\n    }\n    get typeName() {\n        return stream_type_1.StreamType.nameByCode(__classPrivateFieldGet(this, _StreamID_type, \"f\"));\n    }\n    get cid() {\n        return __classPrivateFieldGet(this, _StreamID_cid, \"f\");\n    }\n    get bytes() {\n        const codec = varint_1.default.encode(constants_1.STREAMID_CODEC);\n        const type = varint_1.default.encode(this.type);\n        return concat_1.default([codec, type, this.cid.bytes]);\n    }\n    get baseID() {\n        return new StreamID(__classPrivateFieldGet(this, _StreamID_type, \"f\"), __classPrivateFieldGet(this, _StreamID_cid, \"f\"));\n    }\n    atCommit(commit) {\n        return new commit_id_1.CommitID(__classPrivateFieldGet(this, _StreamID_type, \"f\"), __classPrivateFieldGet(this, _StreamID_cid, \"f\"), commit);\n    }\n    equals(other) {\n        if (StreamID.isInstance(other)) {\n            return this.type === other.type && this.cid.equals(other.cid);\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        return to_string_1.default(multibase_1.default.encode(constants_1.DEFAULT_BASE, this.bytes));\n    }\n    toUrl() {\n        return `ceramic://${this.toString()}`;\n    }\n    [(_StreamID_type = new WeakMap(), _StreamID_cid = new WeakMap(), Symbol.for('nodejs.util.inspect.custom'))]() {\n        return `StreamID(${this.toString()})`;\n    }\n    [Symbol.toPrimitive]() {\n        return this.toString();\n    }\n}\nStreamID.fromBytes = fromBytes;\nStreamID.fromBytesNoThrow = fromBytesNoThrow;\nStreamID.fromString = fromString;\nStreamID.fromStringNoThrow = fromStringNoThrow;\n__decorate([\n    typescript_memoize_1.Memoize(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [])\n], StreamID.prototype, \"typeName\", null);\n__decorate([\n    typescript_memoize_1.Memoize(),\n    __metadata(\"design:type\", Uint8Array),\n    __metadata(\"design:paramtypes\", [])\n], StreamID.prototype, \"bytes\", null);\n__decorate([\n    typescript_memoize_1.Memoize(),\n    __metadata(\"design:type\", StreamID),\n    __metadata(\"design:paramtypes\", [])\n], StreamID.prototype, \"baseID\", null);\n__decorate([\n    typescript_memoize_1.Memoize(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", String)\n], StreamID.prototype, \"toString\", null);\n__decorate([\n    typescript_memoize_1.Memoize(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", String)\n], StreamID.prototype, \"toUrl\", null);\nexports.StreamID = StreamID;\n"},"sourceMaps":{"js":{"version":3,"file":"stream-id.js","sourceRoot":"","sources":["../src/stream-id.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"ea6a845c97eb8ba44f2b09e10c93e520","cacheData":{"env":{}}}